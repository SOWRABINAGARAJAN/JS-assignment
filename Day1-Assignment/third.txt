Data Types in JavaScript - Introduction

String Datatype:
var a = "Welcome to JS";


Number Datatype:
var x = 10;//integer
var y = 2.5;//float
var z = 8.2e+1;//exponential

The Number data type also includes some special values which are: Infinity, -Infinity and NaN(Not a Number).
lert(5 / 0);  // Output: Infinity
alert(-5 / 0); // Output: -Infinity
alert(5 / -0); // Output: -Infinity
alert(0/0);//Output:NaN

Boolean Datatype:
The Boolean data type can hold only two values: true or false. It is typically used to store values like yes (true) or no (false), on (true) or off (false).

var a = 2, b = 5, c = 10;
alert(b > a) // Output: true
alert(b > c) // Output: false

Undefined Datatype:
var a;
alert(a);//Output:Undefined

Null Datatype:
var a = null;
alert(a); // Output: null
 
var b = "Hello World!"
alert(b); // Output: Hello World!
 
b = null;
alert(b) // Output: null

Object Datatype:
The object is a complex data type that allows you to store collections of data.
var person ={
    name:"abc",
    age:"10",
    }


Array Datatype:
An array is a type of object used for storing multiple values in single variable.
var colors = ["Red", "Yellow", "Green", "Orange"];
alert(colors[2]);   // Output: Green

Function Datatype:
The function is callable object that executes a block of code. 
Since functions are objects, so it is possible to assign them to variables.

var greeting = func(){ 
    return "JavaScript Essentials!"; 
}
 alert(greeting());     // Output: JavaScript Essentials!

 typeof operator:
 The typeof operator can be used to find out what type of data a variable or operand contains.
 typeof 10//output:number
 typeof 8.9//output:number
 typeof 'hi'//output:String
 typeof true//output:boolean
 typeof undefined//output:undefined
 typeof ['','']//returns object